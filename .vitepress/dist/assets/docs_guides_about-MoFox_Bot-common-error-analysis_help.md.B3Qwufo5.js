import{_ as d,I as o,c as h,o as u,a3 as s,j as a,J as e,a as l,w as t}from"./chunks/framework.Coydrlbh.js";const x=JSON.parse('{"title":"关于 MoFox-bot 的常见错误报告","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guides/about-MoFox_Bot-common-error-analysis&help.md","filePath":"docs/guides/about-MoFox_Bot-common-error-analysis&help.md","lastUpdated":1757776470000}'),k={name:"docs/guides/about-MoFox_Bot-common-error-analysis&help.md"};function g(b,i,c,m,_,f){const n=o("VPNolebaseInlineLinkPreview"),p=o("NolebaseGitContributors"),r=o("NolebaseGitChangelog");return u(),h("div",null,[i[30]||(i[30]=s('<h1 id="关于-mofox-bot-的常见错误报告" tabindex="-1">关于 MoFox-bot 的常见错误报告 <a class="header-anchor" href="#关于-mofox-bot-的常见错误报告" aria-label="Permalink to “关于 MoFox-bot 的常见错误报告”">​</a></h1><h2 id="_1-使用-windows-平台-qq-的用户被下线问题的相关解析" tabindex="-1">1. 使用 Windows 平台 QQ 的用户被下线问题的相关解析 <a class="header-anchor" href="#_1-使用-windows-平台-qq-的用户被下线问题的相关解析" aria-label="Permalink to “1. 使用 Windows 平台 QQ 的用户被下线问题的相关解析”">​</a></h2><h2 id="_2-使用-linux-windows-for-linux-用户出现的-napcat-问题的相关解析" tabindex="-1">2. 使用 Linux（Windows For Linux）用户出现的 NapCat 问题的相关解析 <a class="header-anchor" href="#_2-使用-linux-windows-for-linux-用户出现的-napcat-问题的相关解析" aria-label="Permalink to “2. 使用 Linux（Windows For Linux）用户出现的 NapCat 问题的相关解析”">​</a></h2><hr><h3 id="文件-py-可执行文件的报错问题的相关解析" tabindex="-1">文件/.py/可执行文件的报错问题的相关解析 <a class="header-anchor" href="#文件-py-可执行文件的报错问题的相关解析" aria-label="Permalink to “文件/.py/可执行文件的报错问题的相关解析”">​</a></h3><ol><li>报错提示为某文件配置错误的相关解析</li><li><s>报错提示为某文件xxxxxxx的相关解析</s></li></ol><hr><h3 id="一键包的废弃功能导致的报错的相关解析" tabindex="-1">一键包的废弃功能导致的报错的相关解析 <a class="header-anchor" href="#一键包的废弃功能导致的报错的相关解析" aria-label="Permalink to “一键包的废弃功能导致的报错的相关解析”">​</a></h3><ol><li>废弃功能的相关解析</li></ol><hr><h3 id="pip-命令的使用解析和功能解析" tabindex="-1">pip 命令的使用解析和功能解析 <a class="header-anchor" href="#pip-命令的使用解析和功能解析" aria-label="Permalink to “pip 命令的使用解析和功能解析”">​</a></h3><ol><li>有关于 pip 各个常用命令</li><li>有关于 install/uninstall 的解析</li><li>有关于 show 命令的解析</li><li>有关于 update/upgrade 的相关解析</li></ol><hr><h3 id="模型的提供商和url填写以及模型调用的帮助" tabindex="-1">模型的提供商和URL填写以及模型调用的帮助 <a class="header-anchor" href="#模型的提供商和url填写以及模型调用的帮助" aria-label="Permalink to “模型的提供商和URL填写以及模型调用的帮助”">​</a></h3><hr><h3 id="小糖人必看内容" tabindex="-1">小糖人必看内容！！！！！！！！！！！！！ <a class="header-anchor" href="#小糖人必看内容" aria-label="Permalink to “小糖人必看内容！！！！！！！！！！！！！”">​</a></h3><ol><li>不看的有问题别来问</li><li>不看的可以自觉退出这个项目了，就算是 user 也退！</li></ol><hr><h1 id="关于网络问题的相关解析" tabindex="-1">关于网络问题的相关解析 <a class="header-anchor" href="#关于网络问题的相关解析" aria-label="Permalink to “关于网络问题的相关解析”">​</a></h1><ul><li><h2 id="_401-问题" tabindex="-1">401 问题 <a class="header-anchor" href="#_401-问题" aria-label="Permalink to “401 问题”">​</a></h2></li></ul><ol><li>API key 的填写</li><li>你可能没有填写对应的 API key</li></ol><blockquote><p>默认硅基流动的 API 在 <code>&quot;MoFox_bot\\Bot\\config\\model_config.toml&quot;</code> 文件修改</p></blockquote><ul><li><h2 id="_403-问题" tabindex="-1">403 问题 <a class="header-anchor" href="#_403-问题" aria-label="Permalink to “403 问题”">​</a></h2></li></ul><ol><li>没有删除 pro/deepseekai/deepseekV3 的 “pro/” 前缀 <blockquote><p>因为这是真钱模型，位置同上</p></blockquote></li><li>在 <code>&quot;MoFox_bot\\Bot\\config\\model_config.toml&quot;</code> 文件修改</li></ol><hr><h1 id="关于数字报错的相关解析" tabindex="-1">关于数字报错的相关解析 <a class="header-anchor" href="#关于数字报错的相关解析" aria-label="Permalink to “关于数字报错的相关解析”">​</a></h1><ul><li><h2 id="服务器问题" tabindex="-1">服务器问题 <a class="header-anchor" href="#服务器问题" aria-label="Permalink to “服务器问题”">​</a></h2></li></ul><ol><li><strong>服务器错误是你的模型平台炸了，请检查平台或服务器的服务器压力或等着恢复</strong></li></ol><ul><li><h2 id="个人中转-api-平台的连接问题" tabindex="-1">个人中转 API 平台的连接问题 <a class="header-anchor" href="#个人中转-api-平台的连接问题" aria-label="Permalink to “个人中转 API 平台的连接问题”">​</a></h2></li></ul><ol start="2"><li><strong>连接错误是你与你的 API key 平台的连接错误，请检查</strong><br><code>&quot;MoFox_bot\\Bot\\config\\model_config.toml&quot;</code><br><strong>里的 URL 是否填写正确/是否保存文件/是否挂上了梯子/是否开启对应平台本地服务</strong></li></ol><ul><li><h2 id="文件下载-更新一键包时文件下载失败-下载依赖时文件下载失败" tabindex="-1">文件下载/更新一键包时文件下载失败/下载依赖时文件下载失败 <a class="header-anchor" href="#文件下载-更新一键包时文件下载失败-下载依赖时文件下载失败" aria-label="Permalink to “文件下载/更新一键包时文件下载失败/下载依赖时文件下载失败”">​</a></h2></li></ul>',31)),a("ol",null,[a("li",null,[i[4]||(i[4]=l("下载失败请开启梯子 ",-1)),a("ul",null,[a("li",null,[e(n,{href:"https://xn--4gq62f.com/#/register?code=gpwiVnOu",target:"_blank",rel:"noreferrer"},{default:t(()=>[...i[0]||(i[0]=[l("一元机场",-1)])]),_:1}),i[1]||(i[1]=l(" 费用是 12 元一年 100G 每月/7 元一个月 2048G 网速很捉襟见肘",-1))]),a("li",null,[e(n,{href:"https://inv02.1ytaff.com/register?aff=UZ0ZzCHc",target:"_blank",rel:"noreferrer"},{default:t(()=>[...i[2]||(i[2]=[l("一云梯",-1)])]),_:1}),i[3]||(i[3]=l(" 15 元每月 100G 网速尚可",-1))])])]),i[5]||(i[5]=a("li",null,"是否正确使用镜像源",-1))]),i[31]||(i[31]=a("hr",null,null,-1)),i[32]||(i[32]=a("h2",{id:"windows-平台的-napcat-用户在使用-maibot-时可能见到的问题的相关解析",tabindex:"-1"},[l("Windows 平台的 NapCat 用户在使用 MaiBoT 时可能见到的问题的相关解析 "),a("a",{class:"header-anchor",href:"#windows-平台的-napcat-用户在使用-maibot-时可能见到的问题的相关解析","aria-label":"Permalink to “Windows 平台的 NapCat 用户在使用 MaiBoT 时可能见到的问题的相关解析”"},"​")],-1)),i[33]||(i[33]=a("h3",{id:"如何下载-ubuntu-linux-发行版",tabindex:"-1"},[l("如何下载 Ubuntu（Linux 发行版） "),a("a",{class:"header-anchor",href:"#如何下载-ubuntu-linux-发行版","aria-label":"Permalink to “如何下载 Ubuntu（Linux 发行版）”"},"​")],-1)),a("ol",null,[a("li",null,[i[18]||(i[18]=a("p",null,[a("strong",null,"Win 平台的用户可以尝试转用 WSL 也就是 Windows For Linux 的发行版 → Ubuntu（建议下载 24.xx 的版本，越新越好）")],-1)),a("ul",null,[a("li",null,[a("p",null,[i[7]||(i[7]=l("WSL 安装教程",-1)),i[8]||(i[8]=a("br",null,null,-1)),i[9]||(i[9]=l(" 参考超详细的 WSL 教程：",-1)),e(n,{href:"https://www.bilibili.com/video/BV1tW42197za/?vd_source=b783b2c661561c8519e805a899d94227",target:"_blank",rel:"noreferrer"},{default:t(()=>[...i[6]||(i[6]=[l("Windows上的Linux子系统_哔哩哔哩_bilibili",-1)])]),_:1})])]),i[16]||(i[16]=s(`<li><p>第一步，如果你是 win10，先来到应用商店下载 &quot;Windows terminal&quot;</p></li><li><p>第二步，打开 &quot;Windows terminal&quot; 输入 <code>wsl --install</code></p></li><li><p>等待进度跑完</p></li><li><p>点击终端的加号旁边的小三角</p></li><li><p>选择并点击 Ubuntu</p></li><li><p>复制下面这段命令，粘贴进去点回车</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">napcat.sh </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">https://nclatest.znin.net/NapNeko/NapCat-Installer/main/script/install.sh </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> napcat.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--tui</span></span></code></pre></div></li><li><p>选择第一个 shell 安装，sudo 密码为 123456，不显示密码很正常。</p></li>`,7)),a("li",null,[a("p",null,[a("strong",null,[i[11]||(i[11]=l('若显示 "文件下载失败, 请检查错误。或者手动下载压缩包并放在脚本同目录下" 请到 ',-1)),e(n,{href:"https://github.com/NapNeko/NapCatQQ/releases/tag/v4.8.113",target:"_blank",rel:"noreferrer"},{default:t(()=>[...i[10]||(i[10]=[l("NapCatQQ Releases",-1)])]),_:1}),i[12]||(i[12]=l(" 下载名为 ",-1)),i[13]||(i[13]=a("code",null,"NapCat.Shell.zip",-1)),i[14]||(i[14]=l(" 的 zip 文件，并放到",-1))])]),i[15]||(i[15]=s('<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>\\\\wsl.localhost\\Ubuntu-24.04\\home\\你创建的用户名</span></span></code></pre></div><p>随后重新运行上面的命令</p>',2))]),i[17]||(i[17]=s('<li><p>等待进度条完成后用</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xvfb-run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-sandbox</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -q</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {your_qq_id}</span></span></code></pre></div><p>打开 Linux 的 napcat，例如：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xvfb-run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-sandbox</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -q</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 114514</span></span></code></pre></div></li>',1))])]),i[19]||(i[19]=s('<li><p><strong>请前往 napcat 的 github 网页查看 Linux 部署的相关问题，在 Linux 部署后请在 ada/config 中将 localhost 改为你在 Ubuntu 中的 IP</strong></p><ol><li>使用<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> route</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{ print $3 }&#39;</span></span></code></pre></div>获得你的 Ubuntu 的 IP</li><li>在你启动 napcat 的窗口最上面寻找 <code>token=xxxxxxxxxx</code><br> token=后的就是你的 napcat 密码</li><li>将 napcat 中网络配置中的 IP 替换为上一步获取到的 IP<br> 例如将<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>ws://localhost:8095</span></span></code></pre></div>改为<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>ws://192.168.1.1:8095</span></span></code></pre></div>一定要将端口改为 8095</li><li>再打开 ada 的配置文件将 IP 改为你在 Ubuntu 中获取到的 IP，ada 的文件地址为<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>MaiBotOneKey/modules/MaiBot-Napcat-Adapter/config.toml</span></span></code></pre></div></li><li>随后点火！启动！</li></ol></li><li><p><strong>一键包用户请在控制台里启动 ada/主程序，后手动打开你的 Linux（Ubuntu）输入 <code>xvfb-run -a qq --no-sandbox -q {your_qq_id}</code> #此处看上方示例</strong></p><ol><li>安装了 Linux 版的 napcat 后要如何开启 maibot，只需要在控制台开启 <strong>Ada</strong> 和 <strong>主程序</strong>，随后在 Ubuntu 里使用<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>xvfb-run -a qq --no-sandbox -q {your_qq_id}</span></span></code></pre></div>来开启 napcat，这样你就成功开启完了所有的程序</li></ol></li>',2))]),i[34]||(i[34]=s(`<hr><ul><li><h2 id="文件-py-可执行文件报错问题的相关解析" tabindex="-1">文件/.py/可执行文件报错问题的相关解析 <a class="header-anchor" href="#文件-py-可执行文件报错问题的相关解析" aria-label="Permalink to “文件/.py/可执行文件报错问题的相关解析”">​</a></h2></li></ul><ol><li>可在其所在的根文件夹下寻找 &quot;template&quot;，里面会有你要的模板文件，请复制到原文件的文件夹里，记得在编写完成模板文件后更改其文件名<br> （如我要寻找位于<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>&quot;MoFox_bot\\Bot\\config\\model_config.toml&quot;</span></span></code></pre></div>的文件的模板的话我可以去<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>&quot;MoFox_bot\\Bot\\template&quot;</span></span></code></pre></div>里寻找 <code>model_config_template.toml</code>，这就是我要的 <code>model_config</code> 的模板文件）</li></ol><hr><h1 id="一键包问题的相关解析" tabindex="-1">一键包问题的相关解析 <a class="header-anchor" href="#一键包问题的相关解析" aria-label="Permalink to “一键包问题的相关解析”">​</a></h1><ol><li>一键包控制台是 0.9 版本的，在上面填 key 的信息已经没用了，现在在<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>MoFox_bot\\Bot\\config\\model_config.toml</span></span></code></pre></div>里修改和填写 key</li><li>若你的Ada启动后出现了非常多的<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>无法建立连接:远程计算机拒绝网络连接</span></span>
<span class="line"><span>等待n秒后重试..</span></span>
<span class="line"><span>正在连接到ws://localhost:8000/ws</span></span></code></pre></div>请到主程序输入同意，并深刻阅读 <strong>小糖人必看！！！！！</strong> 的第二则以及全文背诵</li></ol><hr><h1 id="pip-命令的使用解析和功能解析-1" tabindex="-1">pip 命令的使用解析和功能解析 <a class="header-anchor" href="#pip-命令的使用解析和功能解析-1" aria-label="Permalink to “pip 命令的使用解析和功能解析”">​</a></h1>`,8)),a("ol",null,[i[25]||(i[25]=s("<li><p>pip 是 Python 的包管理器，主要命令有<br><code>pip show</code> / <code>pip install</code> / <code>pip uninstall</code> / <code>pip upgrade</code></p></li><li><p><code>pip show</code> ：用来展示包的安装状况，包括版本/安装地址等<br> 附加命令有 <code>-v</code> 显示所有包信息 / <code>-f</code> 显示包文件地址<br> 例如：</p><ul><li><code>pip show -f {package_name}</code> 展示包的所有文件地址</li><li><code>pip show {package_name}</code> 验证包的安装</li></ul></li>",2)),a("li",null,[i[24]||(i[24]=s("<p><code>pip install</code> 的作用一目了然，就是用来安装包的命令<br> 例如：</p><ul><li><code>pip install {package_name}</code> 最简单的使用方法</li><li><code>pip install package==1.2.3</code> 安装指定版本</li><li><code>pip install package&gt;=1.0,&lt;2.0</code> 安装某个版本区间的包</li><li><code>pip install -r requirements.txt</code> 根据依赖文件批量安装</li><li><code>pip install --upgrade package</code> 升级已安装包</li><li><code>pip install</code>：安装当前目录下的包（需含 setup.py 或 pyproject.toml）</li><li><code>pip install -e</code> 以开发模式安装当前目录的包（源码改动即时生效）</li></ul><p>国内常用的镜像站：</p>",3)),a("ul",null,[a("li",null,[i[21]||(i[21]=l("清华：",-1)),e(n,{href:"https://pypi.tuna.tsinghua.edu.cn/simple",target:"_blank",rel:"noreferrer"},{default:t(()=>[...i[20]||(i[20]=[l("https://pypi.tuna.tsinghua.edu.cn/simple",-1)])]),_:1})]),a("li",null,[i[23]||(i[23]=l("阿里云：",-1)),e(n,{href:"https://mirrors.aliyun.com/pypi/simple",target:"_blank",rel:"noreferrer"},{default:t(()=>[...i[22]||(i[22]=[l("https://mirrors.aliyun.com/pypi/simple",-1)])]),_:1})])])])]),i[35]||(i[35]=s('<hr><ul><li><h2 id="pip-uninstall-与-pip-install-十分类似" tabindex="-1">pip uninstall 与 pip install 十分类似 <a class="header-anchor" href="#pip-uninstall-与-pip-install-十分类似" aria-label="Permalink to “pip uninstall 与 pip install 十分类似”">​</a></h2></li></ul><ul><li><code>pip uninstall -r requirements.txt</code> 根据依赖文件进行批量卸载</li><li><code>pip uninstall {package_name}</code> 用于卸载包</li><li>多个包可直接 <code>uninstall</code>，例如：<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>pip uninstall name_1 name_2 name_3</span></span></code></pre></div>不同 name 中间要加上空格，install 同理，下载多个包也是加上空格</li></ul><hr><ul><li><h2 id="pip-upgrade-也就是-pip-update-用来更新包名与-install-uninstall-类似" tabindex="-1">pip upgrade 也就是 pip update，用来更新包名与 install/uninstall 类似 <a class="header-anchor" href="#pip-upgrade-也就是-pip-update-用来更新包名与-install-uninstall-类似" aria-label="Permalink to “pip upgrade 也就是 pip update，用来更新包名与 install/uninstall 类似”">​</a></h2></li></ul><ul><li><code>pip install --upgrade &lt;package_name&gt; -i https://pypi.tuna.tsinghua.edu.cn/simple</code><br> 使用清华源更新名为 package_name 的包</li><li><code>pip install --upgrade &lt;package_name&gt; -r requirements.txt</code></li></ul><hr><ul><li><h2 id="常用源" tabindex="-1">常用源 <a class="header-anchor" href="#常用源" aria-label="Permalink to “常用源”">​</a></h2></li></ul>',8)),a("ul",null,[a("li",null,[i[27]||(i[27]=l("清华：",-1)),e(n,{href:"https://pypi.tuna.tsinghua.edu.cn/simple",target:"_blank",rel:"noreferrer"},{default:t(()=>[...i[26]||(i[26]=[l("https://pypi.tuna.tsinghua.edu.cn/simple",-1)])]),_:1})]),a("li",null,[i[29]||(i[29]=l("阿里云：",-1)),e(n,{href:"https://mirrors.aliyun.com/pypi/simple",target:"_blank",rel:"noreferrer"},{default:t(()=>[...i[28]||(i[28]=[l("https://mirrors.aliyun.com/pypi/simple",-1)])]),_:1})])]),i[36]||(i[36]=s(`<hr><h1 id="模型的提供商和url填写以及模型调用的帮助-1" tabindex="-1">模型的提供商和URL填写以及模型调用的帮助 <a class="header-anchor" href="#模型的提供商和url填写以及模型调用的帮助-1" aria-label="Permalink to “模型的提供商和URL填写以及模型调用的帮助”">​</a></h1><ol><li>如何认清什么是URL，什么是模型供应商</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>   [[api_providers]] # API服务提供商（可以配置多个）</span></span>
<span class="line"><span>   name = &quot;DeepSeek&quot;                       # API服务商名称（可随意命名，在models的api-provider中需使用这个命名）</span></span>
<span class="line"><span>   base_url = &quot;https://api.deepseek.cn/v1&quot; # API服务商的BaseURL</span></span>
<span class="line"><span>   api_key = &quot;your-api-key-here&quot;           # API密钥（请替换为实际的API密钥）</span></span>
<span class="line"><span>   client_type = &quot;openai&quot;                  # 请求客户端（可选，默认值为&quot;openai&quot;，使用gimini等Google系模型时请配置为&quot;gemini&quot;）</span></span>
<span class="line"><span>   max_retry = 2                           # 最大重试次数（单个模型API调用失败，最多重试的次数）</span></span>
<span class="line"><span>   timeout = 30                            # API请求超时时间（单位：秒）</span></span>
<span class="line"><span>   retry_interval = 10                     # 重试间隔时间（单位：秒）</span></span></code></pre></div><ul><li><code>name =</code>是你的供应商名</li><li><code>base_url =</code>是你的模型供应商的URL地址</li><li><code>api-key =</code>是你的api-key的填写处 <strong>若出现401报错请重点查看你的api-key是否填写错误</strong></li><li>可用以上为模板来复制修改成你要的<code>api_providers</code></li></ul><ol start="2"><li>如何正确调用你想要的模型</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>   model_identifier = &quot;deepseek-chat&quot; # 模型标识符（API服务商提供的模型标识符）</span></span>
<span class="line"><span>   name = &quot;deepseek-v3&quot;               # 模型名称（可随意命名，在后面中需使用这个命名）</span></span>
<span class="line"><span>   api_provider = &quot;DeepSeek&quot;          # API服务商名称（对应在api_providers中配置的服务商名称）</span></span>
<span class="line"><span>   price_in = 2.0                     # 输入价格（用于API调用统计，单位：元/ M token）（可选，若无该字段，默认值为0）</span></span>
<span class="line"><span>   price_out = 8.0                    # 输出价格（用于API调用统计，单位：元/ M token）（可选，若无该字段，默认值为0）</span></span>
<span class="line"><span>   #force_stream_mode = true          # 强制流式输出模式（若模型不支持非流式输出，请取消该注释，启用强制流式输出，若无该字段，默认值为false）</span></span></code></pre></div><ul><li><code>model_identifier =</code>是你的模型标识符</li><li><code>name =</code>是你的模型名，请到你所使用的模型提供商那里寻找你要的模型的模型名 <strong>若出现400报错请重点查看你的模型名是否填写错误</strong></li><li><code>api_providers =</code>是你在上文中提到的api服务提供商的<code>name</code>，需与填写<code>name</code>填写一致</li></ul><ol start="3"><li>调用模型时仅在<code>[]</code>中填写 <strong>2.</strong> 中的name，格式为[&#39;model_name&#39;,&#39;model_name&#39;]</li></ol><hr><h1 id="小糖人必看" tabindex="-1">小糖人必看！！！！ <a class="header-anchor" href="#小糖人必看" aria-label="Permalink to “小糖人必看！！！！”">​</a></h1><ul><li>我不会在一棵树上吊死，遇到当前设备不支持某授权模式时不会死活赖在那一个不能用的模式上</li><li>我是一个拥有阅读能力的正常人，会阅读屏幕上的每个文字和每条提示，不会无视任何提示</li><li>我会正确地提问题，在提问的时候自己提供当前设备信息，操作录屏等信息，而不是把别人当作算命先生然后来一句“怎么办”</li><li>我拥有自我学习能力，能通过互联网搜索我所不知道的新事物，并通过网络快速获得答案而不是花上几十分钟去群里问还问不出答案</li></ul><hr><h1 id="终于啊" tabindex="-1">终于啊...... <a class="header-anchor" href="#终于啊" aria-label="Permalink to “终于啊......”">​</a></h1>`,14)),e(p),e(r)])}const C=d(k,[["render",g]]);export{x as __pageData,C as default};
