import{_ as l,I as i,c as n,o as p,a3 as h,J as a}from"./chunks/framework.Coydrlbh.js";const F=JSON.parse('{"title":"Napcat Adapter (独立部署)","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guides/adapter_list/napcat_adapter.md","filePath":"docs/guides/adapter_list/napcat_adapter.md","lastUpdated":1758621776000}'),k={name:"docs/guides/adapter_list/napcat_adapter.md"};function r(o,s,d,c,g,E){const t=i("NolebaseGitContributors"),e=i("NolebaseGitChangelog");return p(),n("div",null,[s[0]||(s[0]=h(`<h1 id="napcat-adapter-独立部署" tabindex="-1">Napcat Adapter (独立部署) <a class="header-anchor" href="#napcat-adapter-独立部署" aria-label="Permalink to “Napcat Adapter (独立部署)”">​</a></h1><p>本文档将指导你如何独立配置和使用 Napcat Adapter，使其能够连接到你的 NapCat 客户端，并将消息转发到 MoFox_Bot。</p><h2 id="什么是独立适配器" tabindex="-1">什么是独立适配器？ <a class="header-anchor" href="#什么是独立适配器" aria-label="Permalink to “什么是独立适配器？”">​</a></h2><p>独立适配器意味着 Napcat Adapter 作为一个独立的进程运行，它通过 WebSocket 与 NapCat 和 MoFox_Bot 进行通信。这种部署方式提供了更好的灵活性和稳定性。</p><h2 id="核心概念-websocket-连接模式" tabindex="-1">核心概念：WebSocket 连接模式 <a class="header-anchor" href="#核心概念-websocket-连接模式" aria-label="Permalink to “核心概念：WebSocket 连接模式”">​</a></h2><p>Napcat Adapter 支持两种 WebSocket 连接模式，以适应不同的网络环境和部署需求。</p><h3 id="_1-反向连接模式-reverse-推荐" tabindex="-1">1. 反向连接模式 (<code>reverse</code>) - 推荐 <a class="header-anchor" href="#_1-反向连接模式-reverse-推荐" aria-label="Permalink to “1. 反向连接模式 (reverse) - 推荐”">​</a></h3><p>在这种模式下，<strong>Napcat Adapter 作为 WebSocket 服务器</strong>，等待 NapCat 客户端主动连接。这是默认且最常用的模式。</p><p><strong>工作流程:</strong></p><ol><li>Napcat Adapter 启动并监听一个指定的 IP 地址和端口（例如 <code>ws://0.0.0.0:8095</code>）。</li><li>你在 NapCat 客户端的配置文件中，将 WebSocket 连接地址指向 Napcat Adapter。</li><li>NapCat 客户端连接到 Adapter，开始消息同步。</li></ol><p><strong>优点:</strong></p><ul><li>配置简单，易于理解。</li><li>网络控制更安全，Adapter 可以部署在防火墙后。</li></ul><h3 id="_2-正向连接模式-forward" tabindex="-1">2. 正向连接模式 (<code>forward</code>) <a class="header-anchor" href="#_2-正向连接模式-forward" aria-label="Permalink to “2. 正向连接模式 (forward)”">​</a></h3><p>在这种模式下，<strong>Napcat Adapter 作为 WebSocket 客户端</strong>，主动连接到 NapCat 服务器。</p><p><strong>工作流程:</strong></p><ol><li>NapCat 客户端作为 WebSocket 服务器运行，并监听一个 URL。</li><li>Napcat Adapter 启动后，会根据配置主动连接到该 URL。</li><li>连接成功后，开始消息同步。</li></ol><p><strong>优点:</strong></p><ul><li>适用于 Adapter 无法被外部网络直接访问的场景。</li><li>支持通过 <code>access_token</code> 进行身份验证，增强安全性。</li></ul><h2 id="配置步骤" tabindex="-1">配置步骤 <a class="header-anchor" href="#配置步骤" aria-label="Permalink to “配置步骤”">​</a></h2><ol><li><p><strong>下载或克隆项目</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/MoFox-Studio/Napcat-Adapter.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Napcat-Adapter</span></span></code></pre></div></li><li><p><strong>安装依赖</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#uv用户使用下面这个</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre></div></li><li><p><strong>创建并编辑配置文件</strong> 从模板复制一份配置文件：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> template/template_config.toml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/config.toml</span></span></code></pre></div><p>然后，使用文本编辑器打开 <code>config/config.toml</code> 文件。</p></li></ol><h3 id="配置文件详解" tabindex="-1">配置文件详解 <a class="header-anchor" href="#配置文件详解" aria-label="Permalink to “配置文件详解”">​</a></h3><p>你需要关注文件中的 <code>[napcat_server]</code> 和 <code>[maibot_server]</code> 部分。</p><div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">napcat_server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Napcat连接的ws服务设置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mode = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;reverse&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 连接模式: &quot;reverse&quot; 或 &quot;forward&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">host = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.0.0&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # [反向模式] 监听的主机地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8095</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             # [反向模式] 监听的端口号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                # [正向模式] Napcat 的 WebSocket URL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">access_token = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # [可选] 访问令牌</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">heartbeat_interval = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 心跳间隔（秒）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">maibot_server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 连接麦麦的ws服务设置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">host = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;localhost&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 麦麦在.env文件中设置的主机地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8000</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 麦麦在.env文件中设置的端口</span></span></code></pre></div><h4 id="配置示例-1-使用反向模式" tabindex="-1"><strong>配置示例 1：使用反向模式</strong> <a class="header-anchor" href="#配置示例-1-使用反向模式" aria-label="Permalink to “配置示例 1：使用反向模式”">​</a></h4><p>如果你希望 Adapter 在 <code>0.0.0.0:8095</code> 上监听来自 NapCat 的连接，配置如下：</p><div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">napcat_server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mode = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;reverse&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">host = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.0.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8095</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">access_token = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span></code></pre></div><h4 id="配置示例-2-使用正向模式" tabindex="-1"><strong>配置示例 2：使用正向模式</strong> <a class="header-anchor" href="#配置示例-2-使用正向模式" aria-label="Permalink to “配置示例 2：使用正向模式”">​</a></h4><p>如果你的 NapCat 服务器运行在 <code>ws://127.0.0.1:3001</code>，并且需要令牌 <code>my-secret-token</code>，配置如下：</p><div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">napcat_server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mode = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;forward&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">host = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;localhost&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 此项在 forward 模式下无效，但建议保留</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8095</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 此项在 forward 模式下无效，但建议保留</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ws://127.0.0.1:3001&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">access_token = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my-secret-token&quot;</span></span></code></pre></div><h2 id="权限与安全-配置白名单" tabindex="-1">权限与安全：配置白名单 <a class="header-anchor" href="#权限与安全-配置白名单" aria-label="Permalink to “权限与安全：配置白名单”">​</a></h2><p>除了基本的连接配置，Napcat Adapter 还支持通过独立的 <code>features.toml</code> 文件来管理可以接收消息的群聊和用户，例如设置群聊和私聊的白名单。</p><ol><li><p><strong>创建 <code>features.toml</code> 文件</strong></p><p>在 <code>config</code> 文件夹下，从模板复制一份功能配置文件：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> template/features_template.toml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/features.toml</span></span></code></pre></div></li><li><p><strong>编辑 <code>features.toml</code></strong></p><p>打开 <code>config/features.toml</code> 文件，你可以看到详细的权限设置。</p><p><strong>核心配置项：</strong></p><ul><li><code>group_list_type</code>: 群聊列表类型。 <ul><li><code>&quot;whitelist&quot;</code>: <strong>白名单模式</strong>，只有 <code>group_list</code> 中的群聊的消息才能被传达给机器人。</li><li><code>&quot;blacklist&quot;</code>: <strong>黑名单模式</strong>，<code>group_list</code> 中的群聊<strong>不能</strong>的消息被传达给机器人。</li></ul></li><li><code>group_list</code>: 群聊号码列表。</li><li><code>private_list_type</code>: 私聊列表类型，规则同上。</li><li><code>private_list</code>: 用户 QQ 号码列表。</li></ul><p><strong>配置示例：只允许特定群聊和用户使用</strong></p><div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置为白名单模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">group_list_type = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;whitelist&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 填入允许的群号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">group_list = [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123456789</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">987654321</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置为白名单模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">private_list_type = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;whitelist&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 填入允许的用户QQ号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">private_list = [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10002</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p><code>features.toml</code> 文件支持热重载，修改保存后会立即生效，无需重启适配器。</p></div></li></ol><h2 id="启动适配器" tabindex="-1">启动适配器 <a class="header-anchor" href="#启动适配器" aria-label="Permalink to “启动适配器”">​</a></h2><p>所有配置完成后，在 <code>Napcat-Adapter</code> 目录下运行以下命令来启动适配器：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.py</span></span></code></pre></div><p>如果一切正常，你将看到日志输出，表明适配器已成功启动并根据你选择的模式开始监听或连接。</p><hr><p>现在，你的 Napcat Adapter 已经成功运行了！它会作为你和 MaiBot 之间的桥梁，高效地处理和转发消息。</p>`,38)),a(t),a(e)])}const u=l(k,[["render",r]]);export{F as __pageData,u as default};
