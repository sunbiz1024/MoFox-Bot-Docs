import{_ as s,c as a,o as e,af as n}from"./chunks/framework.Du4BpUy5.js";const g=JSON.parse('{"title":"组件管理API","description":"","frontmatter":{},"headers":[],"relativePath":"docs/plugins/api/component-manage-api.md","filePath":"docs/plugins/api/component-manage-api.md"}'),t={name:"docs/plugins/api/component-manage-api.md"};function l(o,i,h,p,d,r){return e(),a("div",null,[...i[0]||(i[0]=[n(`<h1 id="组件管理api" tabindex="-1">组件管理API <a class="header-anchor" href="#组件管理api" aria-label="Permalink to “组件管理API”">​</a></h1><p>组件管理API模块提供了对插件组件的查询和管理功能，使得插件能够获取和使用组件相关的信息。</p><h2 id="导入方式" tabindex="-1">导入方式 <a class="header-anchor" href="#导入方式" aria-label="Permalink to “导入方式”">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> src.plugin_system.apis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> component_manage_api</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> src.plugin_system </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> component_manage_api</span></span></code></pre></div><h2 id="功能概述" tabindex="-1">功能概述 <a class="header-anchor" href="#功能概述" aria-label="Permalink to “功能概述”">​</a></h2><p>组件管理API主要提供以下功能：</p><ul><li><strong>插件信息查询</strong> - 获取所有插件或指定插件的信息。</li><li><strong>组件查询</strong> - 按名称或类型查询组件信息。</li><li><strong>组件管理</strong> - 启用或禁用组件，支持全局和局部操作。</li></ul><h2 id="主要功能" tabindex="-1">主要功能 <a class="header-anchor" href="#主要功能" aria-label="Permalink to “主要功能”">​</a></h2><h3 id="_1-获取所有插件信息" tabindex="-1">1. 获取所有插件信息 <a class="header-anchor" href="#_1-获取所有插件信息" aria-label="Permalink to “1. 获取所有插件信息”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_all_plugin_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() -&gt; Dict[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, PluginInfo]:</span></span></code></pre></div><p>获取所有插件的信息。</p><p><strong>Returns:</strong></p><ul><li><code>Dict[str, PluginInfo]</code> - 包含所有插件信息的字典，键为插件名称，值为 <code>PluginInfo</code> 对象。</li></ul><h3 id="_2-获取指定插件信息" tabindex="-1">2. 获取指定插件信息 <a class="header-anchor" href="#_2-获取指定插件信息" aria-label="Permalink to “2. 获取指定插件信息”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_plugin_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(plugin_name: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; Optional[PluginInfo]:</span></span></code></pre></div><p>获取指定插件的信息。</p><p><strong>Args:</strong></p><ul><li><code>plugin_name</code> (str): 插件名称。</li></ul><p><strong>Returns:</strong></p><ul><li><code>Optional[PluginInfo]</code>: 插件信息对象，如果插件不存在则返回 <code>None</code>。</li></ul><h3 id="_3-获取指定组件信息" tabindex="-1">3. 获取指定组件信息 <a class="header-anchor" href="#_3-获取指定组件信息" aria-label="Permalink to “3. 获取指定组件信息”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_component_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(component_name: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, component_type: ComponentType) -&gt; Optional[Union[CommandInfo, ActionInfo, EventHandlerInfo]]:</span></span></code></pre></div><p>获取指定组件的信息。</p><p><strong>Args:</strong></p><ul><li><code>component_name</code> (str): 组件名称。</li><li><code>component_type</code> (ComponentType): 组件类型。</li></ul><p><strong>Returns:</strong></p><ul><li><code>Optional[Union[CommandInfo, ActionInfo, EventHandlerInfo]]</code>: 组件信息对象，如果组件不存在则返回 <code>None</code>。</li></ul><h3 id="_4-获取指定类型的所有组件信息" tabindex="-1">4. 获取指定类型的所有组件信息 <a class="header-anchor" href="#_4-获取指定类型的所有组件信息" aria-label="Permalink to “4. 获取指定类型的所有组件信息”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_components_info_by_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(component_type: ComponentType) -&gt; Dict[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Union[CommandInfo, ActionInfo, EventHandlerInfo]]:</span></span></code></pre></div><p>获取指定类型的所有组件信息。</p><p><strong>Args:</strong></p><ul><li><code>component_type</code> (ComponentType): 组件类型。</li></ul><p><strong>Returns:</strong></p><ul><li><code>Dict[str, Union[CommandInfo, ActionInfo, EventHandlerInfo]]</code>: 包含指定类型组件信息的字典，键为组件名称，值为对应的组件信息对象。</li></ul><h3 id="_5-获取指定类型的所有启用的组件信息" tabindex="-1">5. 获取指定类型的所有启用的组件信息 <a class="header-anchor" href="#_5-获取指定类型的所有启用的组件信息" aria-label="Permalink to “5. 获取指定类型的所有启用的组件信息”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_enabled_components_info_by_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(component_type: ComponentType) -&gt; Dict[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Union[CommandInfo, ActionInfo, EventHandlerInfo]]:</span></span></code></pre></div><p>获取指定类型的所有启用的组件信息。</p><p><strong>Args:</strong></p><ul><li><code>component_type</code> (ComponentType): 组件类型。</li></ul><p><strong>Returns:</strong></p><ul><li><code>Dict[str, Union[CommandInfo, ActionInfo, EventHandlerInfo]]</code>: 包含指定类型启用组件信息的字典，键为组件名称，值为对应的组件信息对象。</li></ul><h3 id="_6-获取指定-action-的注册信息" tabindex="-1">6. 获取指定 Action 的注册信息 <a class="header-anchor" href="#_6-获取指定-action-的注册信息" aria-label="Permalink to “6. 获取指定 Action 的注册信息”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_registered_action_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(action_name: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; Optional[ActionInfo]:</span></span></code></pre></div><p>获取指定 Action 的注册信息。</p><p><strong>Args:</strong></p><ul><li><code>action_name</code> (str): Action 名称。</li></ul><p><strong>Returns:</strong></p><ul><li><code>Optional[ActionInfo]</code> - Action 信息对象，如果 Action 不存在则返回 <code>None</code>。</li></ul><h3 id="_7-获取指定-command-的注册信息" tabindex="-1">7. 获取指定 Command 的注册信息 <a class="header-anchor" href="#_7-获取指定-command-的注册信息" aria-label="Permalink to “7. 获取指定 Command 的注册信息”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_registered_command_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(command_name: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; Optional[CommandInfo]:</span></span></code></pre></div><p>获取指定 Command 的注册信息。</p><p><strong>Args:</strong></p><ul><li><code>command_name</code> (str): Command 名称。</li></ul><p><strong>Returns:</strong></p><ul><li><code>Optional[CommandInfo]</code> - Command 信息对象，如果 Command 不存在则返回 <code>None</code>。</li></ul><h3 id="_8-获取指定-tool-的注册信息" tabindex="-1">8. 获取指定 Tool 的注册信息 <a class="header-anchor" href="#_8-获取指定-tool-的注册信息" aria-label="Permalink to “8. 获取指定 Tool 的注册信息”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_registered_tool_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tool_name: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; Optional[ToolInfo]:</span></span></code></pre></div><p>获取指定 Tool 的注册信息。</p><p><strong>Args:</strong></p><ul><li><code>tool_name</code> (str): Tool 名称。</li></ul><p><strong>Returns:</strong></p><ul><li><code>Optional[ToolInfo]</code> - Tool 信息对象，如果 Tool 不存在则返回 <code>None</code>。</li></ul><h3 id="_9-获取指定-eventhandler-的注册信息" tabindex="-1">9. 获取指定 EventHandler 的注册信息 <a class="header-anchor" href="#_9-获取指定-eventhandler-的注册信息" aria-label="Permalink to “9. 获取指定 EventHandler 的注册信息”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_registered_event_handler_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event_handler_name: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; Optional[EventHandlerInfo]:</span></span></code></pre></div><p>获取指定 EventHandler 的注册信息。</p><p><strong>Args:</strong></p><ul><li><code>event_handler_name</code> (str): EventHandler 名称。</li></ul><p><strong>Returns:</strong></p><ul><li><code>Optional[EventHandlerInfo]</code> - EventHandler 信息对象，如果 EventHandler 不存在则返回 <code>None</code>。</li></ul><h3 id="_10-全局启用指定组件" tabindex="-1">10. 全局启用指定组件 <a class="header-anchor" href="#_10-全局启用指定组件" aria-label="Permalink to “10. 全局启用指定组件”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> globally_enable_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(component_name: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, component_type: ComponentType) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><p>全局启用指定组件。</p><p><strong>Args:</strong></p><ul><li><code>component_name</code> (str): 组件名称。</li><li><code>component_type</code> (ComponentType): 组件类型。</li></ul><p><strong>Returns:</strong></p><ul><li><code>bool</code> - 启用成功返回 <code>True</code>，否则返回 <code>False</code>。</li></ul><h3 id="_11-全局禁用指定组件" tabindex="-1">11. 全局禁用指定组件 <a class="header-anchor" href="#_11-全局禁用指定组件" aria-label="Permalink to “11. 全局禁用指定组件”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> globally_disable_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(component_name: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, component_type: ComponentType) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><p>全局禁用指定组件。</p><p><strong>此函数是异步的，确保在异步环境中调用。</strong></p><p><strong>Args:</strong></p><ul><li><code>component_name</code> (str): 组件名称。</li><li><code>component_type</code> (ComponentType): 组件类型。</li></ul><p><strong>Returns:</strong></p><ul><li><code>bool</code> - 禁用成功返回 <code>True</code>，否则返回 <code>False</code>。</li></ul><h3 id="_12-局部启用指定组件" tabindex="-1">12. 局部启用指定组件 <a class="header-anchor" href="#_12-局部启用指定组件" aria-label="Permalink to “12. 局部启用指定组件”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> locally_enable_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(component_name: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, component_type: ComponentType, stream_id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><p>局部启用指定组件。</p><p><strong>Args:</strong></p><ul><li><code>component_name</code> (str): 组件名称。</li><li><code>component_type</code> (ComponentType): 组件类型。</li><li><code>stream_id</code> (str): 消息流 ID。</li></ul><p><strong>Returns:</strong></p><ul><li><code>bool</code> - 启用成功返回 <code>True</code>，否则返回 <code>False</code>。</li></ul><h3 id="_13-局部禁用指定组件" tabindex="-1">13. 局部禁用指定组件 <a class="header-anchor" href="#_13-局部禁用指定组件" aria-label="Permalink to “13. 局部禁用指定组件”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> locally_disable_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(component_name: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, component_type: ComponentType, stream_id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><p>局部禁用指定组件。</p><p><strong>Args:</strong></p><ul><li><code>component_name</code> (str): 组件名称。</li><li><code>component_type</code> (ComponentType): 组件类型。</li><li><code>stream_id</code> (str): 消息流 ID。</li></ul><p><strong>Returns:</strong></p><ul><li><code>bool</code> - 禁用成功返回 <code>True</code>，否则返回 <code>False</code>。</li></ul><h3 id="_14-获取指定消息流中禁用的组件列表" tabindex="-1">14. 获取指定消息流中禁用的组件列表 <a class="header-anchor" href="#_14-获取指定消息流中禁用的组件列表" aria-label="Permalink to “14. 获取指定消息流中禁用的组件列表”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_locally_disabled_components</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(stream_id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, component_type: ComponentType) -&gt; list[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]:</span></span></code></pre></div><p>获取指定消息流中禁用的组件列表。</p><p><strong>Args:</strong></p><ul><li><code>stream_id</code> (str): 消息流 ID。</li><li><code>component_type</code> (ComponentType): 组件类型。</li></ul><p><strong>Returns:</strong></p><ul><li><code>list[str]</code> - 禁用的组件名称列表。</li></ul>`,105)])])}const c=s(t,[["render",l]]);export{g as __pageData,c as default};
