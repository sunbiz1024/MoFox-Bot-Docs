import{_ as n,I as i,c as _,o as m,a3 as t,j as o,J as a,a as l,w as s}from"./chunks/framework.Coydrlbh.js";const P=JSON.parse('{"title":"MoFox-Bot 配置文件 (bot_config.toml) 究极详细指南","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guides/bot_config_guide.md","filePath":"docs/guides/bot_config_guide.md","lastUpdated":1758616365000}'),h={name:"docs/guides/bot_config_guide.md"},u={class:"tip custom-block"},p={class:"tip custom-block"};function g(b,e,y,q,f,k){const d=i("VPNolebaseInlineLinkPreview"),c=i("NolebaseGitContributors"),r=i("NolebaseGitChangelog");return m(),_("div",null,[e[9]||(e[9]=t('<h1 id="mofox-bot-配置文件-bot-config-toml-究极详细指南" tabindex="-1">MoFox-Bot 配置文件 (bot_config.toml) 究极详细指南 <a class="header-anchor" href="#mofox-bot-配置文件-bot-config-toml-究极详细指南" aria-label="Permalink to “MoFox-Bot 配置文件 (bot_config.toml) 究极详细指南”">​</a></h1><p>哼，欢迎来到我的地盘，这份指南会像我一样，精准、高效、偶尔带点吐槽地带你完全掌握 <code>bot_config.toml</code> 这个文件。不管你是刚接触机器人的小白，还是想深度定制的极客，这里都有你想要的答案。记住，我们项目的核心是<strong>高度拟人化</strong>，所以接下来的所有配置，都是为了创造一个有“灵魂”的 Bot。</p><h2 id="零、重要-如何拥有你的配置文件" tabindex="-1">零、重要：如何拥有你的配置文件 <a class="header-anchor" href="#零、重要-如何拥有你的配置文件" aria-label="Permalink to “零、重要：如何拥有你的配置文件”">​</a></h2><p>想让机器人动起来？那你就得先给它一份名为 <code>bot_config.toml</code> 的“身份卡”。</p><p><strong>正确姿势如下</strong>：</p><ol><li>找到项目里的 <code>template/bot_config_template.toml</code> 文件，<strong>完整地</strong>复制一份。别缺斤少两的。</li><li>把复制出来的文件，丢到 <code>config/</code> 目录下面，然后把它改名为 <code>bot_config.toml</code>。</li><li>打开这个新文件，跟着本指南，开始你的“创世之旅”吧。</li></ol><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>模板文件里有所有必需的配置项，别自作主张乱删东西，尤其是你看不懂的。不然机器人闹脾气罢工了，可别怪我没提醒你。</p></div><h2 id="一、基础配置-机器人的-心脏与大脑" tabindex="-1">一、基础配置：机器人的“心脏与大脑” <a class="header-anchor" href="#一、基础配置-机器人的-心脏与大脑" aria-label="Permalink to “一、基础配置：机器人的“心脏与大脑””">​</a></h2><p>这部分是让机器人跑起来的基础，没这些，后面都是空谈。</p><h3 id="database-数据库-记忆的存放地" tabindex="-1">[database] - 数据库：记忆的存放地 <a class="header-anchor" href="#database-数据库-记忆的存放地" aria-label="Permalink to “[database] - 数据库：记忆的存放地”">​</a></h3><p>这里决定了机器人的记忆、知识、还有它偷偷学到的小习惯都存在哪儿。</p><ul><li><code>database_type</code>: 数据库类型。 <ul><li><code>&quot;sqlite&quot;</code>: <strong>强烈推荐新手使用</strong>。简单、方便、开箱即用，就像个外置硬盘。数据库文件会放在 <code>sqlite_path</code> 指定的位置。</li><li><code>&quot;mysql&quot;</code>: 如果你有专业的服务器，想让机器人处理海量数据，那就选这个。当然，你得自己先去把 MySQL/MariaDB 服务器搭好。</li></ul></li></ul><h4 id="sqlite-配置-当-database-type-sqlite" tabindex="-1">SQLite 配置 (当 <code>database_type = &quot;sqlite&quot;</code>) <a class="header-anchor" href="#sqlite-配置-当-database-type-sqlite" aria-label="Permalink to “SQLite 配置 (当 database_type = &quot;sqlite&quot;)”">​</a></h4><ul><li><code>sqlite_path</code>: 数据库文件的路径。默认是 <code>&quot;data/MaiBot.db&quot;</code>，<strong>通常你不需要动它</strong>。</li></ul><h4 id="mysql-配置-当-database-type-mysql" tabindex="-1">MySQL 配置 (当 <code>database_type = &quot;mysql&quot;</code>) <a class="header-anchor" href="#mysql-配置-当-database-type-mysql" aria-label="Permalink to “MySQL 配置 (当 database_type = &quot;mysql&quot;)”">​</a></h4><p>只有选择了 <code>mysql</code>，这部分才需要你来操心。</p><ul><li><code>mysql_host</code>, <code>mysql_port</code>: 你的 MySQL 服务器地址和端口。</li><li><code>mysql_database</code>, <code>mysql_user</code>, <code>mysql_password</code>: 数据库名、用户名和密码。</li><li><code>mysql_charset</code>: 字符集，默认 <code>&quot;utf8mb4&quot;</code>，支持 emoji。</li><li><code>mysql_unix_socket</code>: Unix 套接字路径，一般用不上，留空就行。</li><li><code>mysql_ssl_mode</code>, <code>mysql_ssl_ca</code>, <code>mysql_ssl_cert</code>, <code>mysql_ssl_key</code>: SSL 加密连接相关的配置，有需要再研究。</li><li><code>mysql_autocommit</code>: 是否自动提交事务，默认 <code>true</code>。</li><li><code>mysql_sql_mode</code>: SQL 模式，默认 <code>&quot;TRADITIONAL&quot;</code>。</li><li><code>connection_pool_size</code>: 连接池大小，简单来说就是性能优化，默认 <code>10</code> 够用了。</li><li><code>connection_timeout</code>: 连接超时时间（秒）。</li></ul><h3 id="permission-权限系统-谁是主人" tabindex="-1">[permission] - 权限系统：谁是主人？ <a class="header-anchor" href="#permission-权限系统-谁是主人" aria-label="Permalink to “[permission] - 权限系统：谁是主人？”">​</a></h3><ul><li><code>master_users</code>: <strong>机器人管理员</strong>列表。把你的账号加进去，你就能在机器人的权限系统“为所欲为”了。 <ul><li>格式: <code>[[&quot;平台&quot;, &quot;你的ID&quot;]]</code></li><li>示例: <code>master_users = [[&quot;qq&quot;, &quot;123456789&quot;]]</code></li></ul></li></ul>',19)),o("div",u,[e[4]||(e[4]=o("p",{class:"custom-block-title custom-block-title-default"},"TIP",-1)),o("ol",null,[e[3]||(e[3]=o("li",null,[l("这里的用户 ID 必须是字符串格式，哪怕是数字也要加引号。平台名称目前支持 "),o("code",null,'"qq"'),l("。")],-1)),o("li",null,[e[1]||(e[1]=l("如果你想获取更多关于权限系统的信息,请参阅",-1)),a(d,{href:"./permission_usage.html"},{default:s(()=>[...e[0]||(e[0]=[l("权限系统使用指南",-1)])]),_:1}),e[2]||(e[2]=l("。",-1))])])]),e[10]||(e[10]=t('<h3 id="bot-机器人身份信息" tabindex="-1">[bot] - 机器人身份信息 <a class="header-anchor" href="#bot-机器人身份信息" aria-label="Permalink to “[bot] - 机器人身份信息”">​</a></h3><ul><li><code>platform</code>: <strong>【必填】</strong> 机器人运行的平台，比如 <code>&quot;qq&quot;</code>。</li><li><code>qq_account</code>: <strong>【必填】</strong> 你家机器人的 QQ 号。</li><li><code>nickname</code>: 机器人的大名。</li><li><code>alias_names</code>: 机器人的小名、外号。别人喊这些名字，它也会有反应。</li></ul><h3 id="command-命令配置" tabindex="-1">[command] - 命令配置 <a class="header-anchor" href="#command-命令配置" aria-label="Permalink to “[command] - 命令配置”">​</a></h3><ul><li><code>command_prefixes</code>: 命令的起始符号。比如设成 <code>[&#39;/&#39;, &#39;!&#39;]</code>，那 <code>/帮助</code> 和 <code>!帮助</code> 就都能用。</li></ul><h2 id="二、核心人格-塑造独一无二的-ta" tabindex="-1">二、核心人格：塑造独一无二的“TA” <a class="header-anchor" href="#二、核心人格-塑造独一无二的-ta" aria-label="Permalink to “二、核心人格：塑造独一无二的“TA””">​</a></h2><p>这部分是拟人化的灵魂所在，决定了机器人“是谁”以及“它如何说话”。</p><h3 id="personality-人格与风格" tabindex="-1">[personality] - 人格与风格 <a class="header-anchor" href="#personality-人格与风格" aria-label="Permalink to “[personality] - 人格与风格”">​</a></h3><p>这是你为机器人注入灵魂的地方！</p><ul><li><code>personality_core</code>: <strong>人格核心</strong>。一句话概括 TA 的性格，这是最关键的设定。例如：“是一个积极向上的女大学生”。</li><li><code>personality_side</code>: <strong>人格侧面</strong>。对核心的补充，让性格更丰满。例如：“偶尔有点小迷糊，但对朋友非常真诚”。</li><li><code>identity</code>: <strong>身份信息</strong>。更具体的设定，比如外貌、年龄、职业等。例如：“年龄19岁,是女孩子,身高为160cm,有黑色的短发”。</li><li><code>background_story</code>: <strong>世界观背景</strong>。为机器人设定一个独特的背景故事，这部分内容会成为它的背景知识，但它不会主动复述。</li><li><code>reply_style</code>: <strong>说话风格</strong>。描述它说话的习惯，例如：“回复可以简短一些。可以参考贴吧，知乎和微博的回复风格”。</li><li><code>safety_guidelines</code>: <strong>安全与互动底线</strong>。机器人必须遵守的原则，这是最高指令，任何情况下都不能违背。</li><li><code>reply_targeting_rules</code>, <code>message_targeting_analysis</code>, <code>reply_principles</code>: <strong>回复逻辑三件套</strong>。这决定了机器人如何判断要不要回复、如何组织回复，是让它“会读空气”的关键，<strong>新手建议保持默认</strong>。</li><li><code>prompt_mode</code>: Prompt 模式，保持 <code>&quot;s4u&quot;</code> 即可，这是为本项目优化的模式。</li><li><code>compress_personality</code>, <code>compress_identity</code>: <strong>人格压缩</strong>。开启后可以节省一点点资源，但可能会丢失人设细节。如果你的模型性能不错，建议都设为 <code>false</code> 以获得最佳拟人效果。</li></ul><h3 id="expression-表达学习-近朱者赤" tabindex="-1">[expression] - 表达学习：近朱者赤 <a class="header-anchor" href="#expression-表达学习-近朱者赤" aria-label="Permalink to “[expression] - 表达学习：近朱者赤”">​</a></h3><p>让机器人模仿特定聊天对象的说话风格，变得更“接地气”。</p><ul><li><code>rules</code>: 一个学习规则列表，可以为不同的聊天（私聊/群聊）设置独立的规则。 <ul><li><code>chat_stream_id</code>: 聊天ID。留空 <code>&quot;&quot;</code> 表示全局配置。</li><li><code>use_expression</code>: 是否<strong>使用</strong>学到的表达。</li><li><code>learn_expression</code>: 是否<strong>学习</strong>新的表达。</li><li><code>learning_strength</code>: 学习强度，数值越大，学得越快。</li><li><code>group</code>: 表达共享组。在同一个组内的聊天会共享学习到的表达方式。</li></ul></li></ul><h3 id="chat-聊天通用设置" tabindex="-1">[chat] - 聊天通用设置 <a class="header-anchor" href="#chat-聊天通用设置" aria-label="Permalink to “[chat] - 聊天通用设置”">​</a></h3><ul><li><code>group_chat_mode</code>: <strong>群聊模式</strong>。 <ul><li><code>&quot;auto&quot;</code>: 自动判断，有人@它或和它连续对话时，会进入专注模式。</li><li><code>&quot;normal&quot;</code>: 只进行简单回复，节省资源。</li><li><code>&quot;focus&quot;</code>: 在群里也尝试进行深度对话，像私聊一样。</li></ul></li><li><code>talk_frequency</code>: <strong>活跃度</strong>。数值越高，它在群里发言就越频繁。</li><li><code>focus_value</code>: <strong>专注度</strong>。数值越高，机器人越能进行持久的连续对话。</li><li><code>focus_mode_quiet_groups</code>: 在专注模式下需要保持“高冷”的群组列表。</li><li><code>force_reply_private</code>: <strong>私聊强制回复</strong>。开启后，私聊时机器人一定会回复。</li><li><code>allow_reply_self</code>: 是否允许机器人回复自己发出的消息。</li><li><code>max_context_size</code>: <strong>记忆长度</strong>。机器人能记住的最近对话数量。</li><li><code>thinking_timeout</code>: <strong>思考超时</strong>（秒）--控制一次回复最长需要多久时间才会被放弃。</li><li><code>replyer_random_probability</code>: 首要回复模型被选择的概率。</li><li><code>mentioned_bot_inevitable_reply</code>, <code>at_bot_inevitable_reply</code>: <strong>@必回</strong>。开启后，只要有人@它或提到它的名字，它就一定会回复。</li><li><code>talk_frequency_adjust</code>: <strong>分时段活跃度</strong>。可以设置机器人在不同时间段有不同的活跃度，实现“早C晚A”般的作息。</li></ul><h4 id="主动思考功能-仅-focus-模式生效" tabindex="-1">主动思考功能 (仅 focus 模式生效) <a class="header-anchor" href="#主动思考功能-仅-focus-模式生效" aria-label="Permalink to “主动思考功能 (仅 focus 模式生效)”">​</a></h4><ul><li><code>enable_proactive_thinking</code>: <strong>主动找话题</strong>。开启后，机器人在冷场时会自己找话题聊天。</li><li><code>proactive_thinking_interval</code>: <strong>思考间隔</strong>（秒）。大概多久主动说一次话。</li><li><code>proactive_thinking_in_private</code>, <code>proactive_thinking_in_group</code>: 分别控制是否在私聊和群聊中启用。</li><li><code>proactive_thinking_enable_in_private</code>, <code>proactive_thinking_enable_in_groups</code>: 指定只在哪些聊天中启用，为空则不限制。</li><li><code>delta_sigma</code>: <strong>随机性</strong>。让主动说话的时间变得不那么固定，更像真人。</li></ul><h2 id="三、进阶功能-解锁机器人的-超能力" tabindex="-1">三、进阶功能：解锁机器人的“超能力” <a class="header-anchor" href="#三、进阶功能-解锁机器人的-超能力" aria-label="Permalink to “三、进阶功能：解锁机器人的“超能力””">​</a></h2><p>这部分是机器人的“隐藏技能”，开启后会让它变得更强大、更智能。</p><h3 id="relationship-关系系统" tabindex="-1">[relationship] - 关系系统 <a class="header-anchor" href="#relationship-关系系统" aria-label="Permalink to “[relationship] - 关系系统”">​</a></h3><ul><li><code>enable_relationship</code>: 开启后，机器人会尝试与聊天对象建立和发展关系，影响其说话的语气和态度。</li><li><code>relation_frequency</code>: 关系构建的频率。</li></ul><h3 id="message-receive-消息过滤" tabindex="-1">[message_receive] - 消息过滤 <a class="header-anchor" href="#message-receive-消息过滤" aria-label="Permalink to “[message_receive] - 消息过滤”">​</a></h3><ul><li><code>ban_words</code>: 屏蔽词列表。</li><li><code>ban_msgs_regex</code>: 屏蔽消息的正则表达式列表。</li></ul><h3 id="anti-prompt-injection-人格防篡改系统" tabindex="-1">[anti_prompt_injection] - 人格防篡改系统 <a class="header-anchor" href="#anti-prompt-injection-人格防篡改系统" aria-label="Permalink to “[anti_prompt_injection] - 人格防篡改系统”">​</a></h3><p>用于防止机器人被恶意指令攻击。</p><ul><li><code>enabled</code>: 是否启用。</li><li><code>process_mode</code>: 处理模式，如 <code>&quot;strict&quot;</code> (严格), <code>&quot;lenient&quot;</code> (宽松)。</li><li><code>whitelist</code>: 白名单，这些用户的消息将跳过检测。</li><li>其他均为高级配置，通常无需修改。</li></ul><h3 id="normal-chat-普通聊天" tabindex="-1">[normal_chat] - 普通聊天 <a class="header-anchor" href="#normal-chat-普通聊天" aria-label="Permalink to “[normal_chat] - 普通聊天”">​</a></h3><ul><li><code>willing_mode</code>: 回复意愿模式，保持 <code>&quot;classical&quot;</code> 即可。</li></ul><h3 id="tool-工具" tabindex="-1">[tool] - 工具 <a class="header-anchor" href="#tool-工具" aria-label="Permalink to “[tool] - 工具”">​</a></h3><ul><li><code>enable_tool</code>: 是否在普通聊天中启用工具（如网络搜索、看视频等）。</li></ul><h3 id="mood-情绪系统" tabindex="-1">[mood] - 情绪系统 <a class="header-anchor" href="#mood-情绪系统" aria-label="Permalink to “[mood] - 情绪系统”">​</a></h3><ul><li><code>enable_mood</code>: 让机器人拥有喜怒哀乐，并影响它的回复。</li><li><code>mood_update_threshold</code>: 情绪更新阈值，越高，情绪变化越慢，性格越稳定。</li></ul><h3 id="emoji-表情包系统" tabindex="-1">[emoji] - 表情包系统 <a class="header-anchor" href="#emoji-表情包系统" aria-label="Permalink to “[emoji] - 表情包系统”">​</a></h3><ul><li><code>emoji_chance</code>: <strong>发表情包的概率</strong>。</li><li><code>emoji_activate_type</code>: 推荐设为 <code>&quot;llm&quot;</code>，让机器人智能地判断何时该发表情包。</li><li><code>steal_emoji</code>: <strong>偷表情包</strong>。开启后，它会把别人发的有趣表情包收藏起来自己用。</li><li><code>max_reg_num</code>, <code>do_replace</code>: 收藏表情包的最大数量，以及满了之后是否替换旧的。</li><li>其他均为高级配置，用于精细化管理表情包。</li></ul><h3 id="memory-记忆系统" tabindex="-1">[memory] - 记忆系统 <a class="header-anchor" href="#memory-记忆系统" aria-label="Permalink to “[memory] - 记忆系统”">​</a></h3><ul><li><code>enable_memory</code>: <strong>【核心功能】是否开启记忆</strong>。开启后，机器人会记住对话内容，形成长期记忆。<strong>强烈建议开启</strong>。</li><li><code>enable_llm_instant_memory</code>, <code>enable_vector_instant_memory</code>: <strong>瞬时记忆</strong>。让机器人能更好地记住刚刚说过的话。两者都很重要，<strong>建议都开启</strong>。</li><li><code>memory_ban_words</code>: 不希望被记入记忆的词。</li><li>其他 <code>memory_</code>, <code>forget_</code>, <code>consolidate_</code> 开头的选项：用于调整记忆的构建、遗忘、整合频率，<strong>新手建议保持默认</strong>。</li></ul><h3 id="voice-语音识别" tabindex="-1">[voice] - 语音识别 <a class="header-anchor" href="#voice-语音识别" aria-label="Permalink to “[voice] - 语音识别”">​</a></h3><ul><li><code>enable_asr</code>: 开启后，机器人可以“听懂”语音消息。需要额外配置语音识别模型。</li></ul><h3 id="lpmm-knowledge-知识库" tabindex="-1">[lpmm_knowledge] - 知识库 <a class="header-anchor" href="#lpmm-knowledge-知识库" aria-label="Permalink to “[lpmm_knowledge] - 知识库”">​</a></h3><ul><li><code>enable</code>: 是否启用本地知识库功能。这是一个高级功能，用于构建机器人的专属知识体系。</li><li>其他均为知识库的技术参数，<strong>新手建议保持默认</strong>。</li></ul><h3 id="keyword-reaction-关键词-正则回复" tabindex="-1">[keyword_reaction] - 关键词/正则回复 <a class="header-anchor" href="#keyword-reaction-关键词-正则回复" aria-label="Permalink to “[keyword_reaction] - 关键词/正则回复”">​</a></h3><ul><li><code>keyword_rules</code>: 设置关键词触发的固定回复。</li><li><code>regex_rules</code>: 设置正则表达式触发的固定回复。</li></ul><h3 id="custom-prompt-自定义提示词" tabindex="-1">[custom_prompt] - 自定义提示词 <a class="header-anchor" href="#custom-prompt-自定义提示词" aria-label="Permalink to “[custom_prompt] - 自定义提示词”">​</a></h3><ul><li><code>image_prompt</code>: 用于图片描述的提示词。</li><li><code>planner_custom_prompt_content</code>: 用于决策器的自定义提示词内容。</li></ul><h3 id="response-post-process-chinese-typo-response-splitter-回复后处理" tabindex="-1">[response_post_process] &amp; [chinese_typo] &amp; [response_splitter] - 回复后处理 <a class="header-anchor" href="#response-post-process-chinese-typo-response-splitter-回复后处理" aria-label="Permalink to “[response_post_process] &amp; [chinese_typo] &amp; [response_splitter] - 回复后处理”">​</a></h3><ul><li><code>enable_response_post_process</code>: 总开关，启用下面的错别字和分割器。</li><li><code>[chinese_typo]</code>: 开启后，机器人回复时会模拟真⼈，产⽣⼀些随机的、合理的错别字。</li><li><code>[response_splitter]</code>: 开启后，会将过长的回复分割成多条消息发送。</li></ul><h2 id="四、系统与调试-幕后英雄" tabindex="-1">四、系统与调试：幕后英雄 <a class="header-anchor" href="#四、系统与调试-幕后英雄" aria-label="Permalink to “四、系统与调试：幕后英雄”">​</a></h2><p>这部分通常保持默认即可，主要供开发者使用。</p><h3 id="log-日志配置" tabindex="-1">[log] - 日志配置 <a class="header-anchor" href="#log-日志配置" aria-label="Permalink to “[log] - 日志配置”">​</a></h3><ul><li>用于控制日志的输出格式、级别和颜色，方便排查问题。</li></ul><h3 id="dependency-management-插件依赖管理" tabindex="-1">[dependency_management] - 插件依赖管理 <a class="header-anchor" href="#dependency-management-插件依赖管理" aria-label="Permalink to “[dependency_management] - 插件依赖管理”">​</a></h3><ul><li><code>auto_install</code>: <strong>【推荐开启】</strong> 是否自动为插件安装所需的Python依赖库。</li><li><code>use_mirror</code>, <code>mirror_url</code>: 使用国内镜像源加速下载。</li></ul><h3 id="debug-调试" tabindex="-1">[debug] - 调试 <a class="header-anchor" href="#debug-调试" aria-label="Permalink to “[debug] - 调试”">​</a></h3><ul><li><code>show_prompt</code>: 是否在日志中显示完整的prompt内容，用于调试人设,也用于发给开发者用。</li></ul><h3 id="maim-message-消息服务" tabindex="-1">[maim_message] - 消息服务 <a class="header-anchor" href="#maim-message-消息服务" aria-label="Permalink to “[maim_message] - 消息服务”">​</a></h3><ul><li>用于连接自定义的消息服务器，<strong>通常无需修改</strong>。</li></ul><h3 id="planning-system-规划系统" tabindex="-1">[planning_system] - 规划系统 <a class="header-anchor" href="#planning-system-规划系统" aria-label="Permalink to “[planning_system] - 规划系统”">​</a></h3><ul><li><code>schedule_enable</code>: <strong>日程生成</strong>。开启后，机器人会为自己安排每天的日程。</li><li><code>monthly_plan_enable</code>: <strong>月度计划</strong>。开启后，机器人会为自己制定月度目标。</li><li>其他均为详细参数，可按需调整。</li></ul><h3 id="video-analysis-视频分析" tabindex="-1">[video_analysis] - 视频分析 <a class="header-anchor" href="#video-analysis-视频分析" aria-label="Permalink to “[video_analysis] - 视频分析”">​</a></h3><ul><li><code>enable</code>: <strong>看视频</strong>。开启后，你把视频发给它，它能“看懂”并告诉你视频内容。这是一个非常消耗资源的功能，并且需要正确配置FFmpeg。</li></ul>',59)),o("div",p,[e[8]||(e[8]=o("p",{class:"custom-block-title custom-block-title-default"},"TIP",-1)),o("p",null,[e[6]||(e[6]=l("关于视频分析功能的详细配置（如抽帧模式、分析质量、FFmpeg路径等）和使用方法，请参考专门的 ",-1)),a(d,{href:"./video_recognition.html"},{default:s(()=>[...e[5]||(e[5]=[l("视频识别功能配置指南",-1)])]),_:1}),e[7]||(e[7]=l(" 页面。",-1))])]),e[11]||(e[11]=t('<h3 id="web-search-网络搜索" tabindex="-1">[web_search] - 网络搜索 <a class="header-anchor" href="#web-search-网络搜索" aria-label="Permalink to “[web_search] - 网络搜索”">​</a></h3><ul><li><code>enable_web_search_tool</code>: <strong>上网冲浪</strong>。让机器人可以搜索网络来回答你的问题。</li><li><code>enable_url_tool</code>: 让机器人可以直接“阅读”链接内容。</li><li><code>tavily_api_keys</code>, <code>exa_api_keys</code>: 需要填入第三方搜索服务的 API Key。</li><li><code>enabled_engines</code>: 启用的搜索引擎，可选 <code>&quot;exa&quot;</code>, <code>&quot;tavily&quot;</code>, <code>&quot;ddg&quot;</code>, <code>&quot;bing&quot;</code>。</li><li><code>search_strategy</code>: 搜索策略，如 <code>&quot;single&quot;</code> (单个), <code>&quot;parallel&quot;</code> (并行), <code>&quot;fallback&quot;</code> (备用)。</li></ul><h3 id="sleep-system-睡眠系统" tabindex="-1">[sleep_system] - 睡眠系统 <a class="header-anchor" href="#sleep-system-睡眠系统" aria-label="Permalink to “[sleep_system] - 睡眠系统”">​</a></h3><ul><li><code>enable</code>: 开启后，机器人会模拟人的作息，在设定的时间“睡觉”。</li><li><code>wakeup_threshold</code>: 控制机器人被“吵醒”的阈值。</li><li><code>angry_prompt</code>: 被吵醒后生气时的人设。</li><li><code>enable_insomnia_system</code>: <strong>失眠系统</strong>。机器人可能会因为“压力”等原因失眠。</li><li><code>enable_flexible_sleep</code>: <strong>弹性睡眠</strong>。机器人不会到点就睡，会根据“睡眠压力”稍微推迟一会。</li><li><code>enable_pre_sleep_notification</code>: <strong>睡前晚安</strong>。准备睡觉时会发一条消息。</li><li>其他均为睡眠和失眠系统的详细参数。</li></ul><h3 id="server-服务器配置" tabindex="-1">[server] - 服务器配置 <a class="header-anchor" href="#server-服务器配置" aria-label="Permalink to “[server] - 服务器配置”">​</a></h3><ul><li><code>host</code>, <code>port</code>: MoFox-Bot 对外提供 API 服务的地址和端口，<strong>通常无需修改</strong>。</li></ul><h3 id="cross-context-跨上下文共享" tabindex="-1">[cross_context] - 跨上下文共享 <a class="header-anchor" href="#cross-context-跨上下文共享" aria-label="Permalink to “[cross_context] - 跨上下文共享”">​</a></h3><ul><li><code>enable</code>: 开启后，可以让机器人在不同的群聊/私聊之间共享上下文。</li><li><code>groups</code>: 定义共享组，在同一个组内的聊天会共享上下文。</li><li><code>maizone_context_group</code>: 定义QQ空间互通组，用于生成更相关的说说。</li></ul><hr><p>好了，配置完成后，记得<strong>保存文件</strong>并<strong>重启 MoFox-Bot</strong>。去享受和你专属 Bot 的愉快时光吧！</p>',10)),a(c),a(r)])}const v=n(h,[["render",g]]);export{P as __pageData,v as default};
