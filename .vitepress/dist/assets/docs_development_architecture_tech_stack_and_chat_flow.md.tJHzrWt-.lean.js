import{_ as g,I as d,c,o as m,a3 as r,j as e,J as t,a as l,w as s}from"./chunks/framework.Coydrlbh.js";const k=JSON.parse('{"title":"MMC 项目技术栈与“聊天流”实现原理分析","description":"","frontmatter":{},"headers":[],"relativePath":"docs/development/architecture/tech_stack_and_chat_flow.md","filePath":"docs/development/architecture/tech_stack_and_chat_flow.md","lastUpdated":1756555974000}'),u={name:"docs/development/architecture/tech_stack_and_chat_flow.md"};function _(p,o,b,C,S,P){const n=d("VPNolebaseInlineLinkPreview"),a=d("NolebaseGitContributors"),i=d("NolebaseGitChangelog");return m(),c("div",null,[o[43]||(o[43]=r("",5)),e("ul",null,[o[6]||(o[6]=e("li",null,[e("strong",null,"语言"),l(": Python 3.12")],-1)),e("li",null,[o[2]||(o[2]=e("strong",null,"Web 框架",-1)),o[3]||(o[3]=l(": ",-1)),t(n,{href:"https://fastapi.tiangolo.com/",target:"_blank",rel:"noreferrer"},{default:s(()=>[...o[0]||(o[0]=[l("FastAPI",-1)])]),_:1}),o[4]||(o[4]=l("，并使用 ",-1)),t(n,{href:"https://www.uvicorn.org/",target:"_blank",rel:"noreferrer"},{default:s(()=>[...o[1]||(o[1]=[l("Uvicorn",-1)])]),_:1}),o[5]||(o[5]=l(" 作为 ASGI 服务器。FastAPI 负责提供可能的外部 API 接口。",-1))]),o[7]||(o[7]=r("",1))]),o[44]||(o[44]=e("h3",{id:"_1-2-数据库技术",tabindex:"-1"},[l("1.2. 数据库技术 "),e("a",{class:"header-anchor",href:"#_1-2-数据库技术","aria-label":"Permalink to “1.2. 数据库技术”"},"​")],-1)),o[45]||(o[45]=e("p",null,"项目采用了混合持久化策略，同时使用了关系型数据库、文档数据库和向量数据库。",-1)),e("ul",null,[e("li",null,[o[13]||(o[13]=e("strong",null,"关系型数据库",-1)),o[14]||(o[14]=l(": ",-1)),e("ul",null,[e("li",null,[o[9]||(o[9]=e("strong",null,"ORM",-1)),o[10]||(o[10]=l(": 使用 ",-1)),t(n,{href:"https://www.sqlalchemy.org/",target:"_blank",rel:"noreferrer"},{default:s(()=>[...o[8]||(o[8]=[l("SQLAlchemy",-1)])]),_:1}),o[11]||(o[11]=l(" 作为核心 ORM。",-1))]),o[12]||(o[12]=r("",2))])]),o[15]||(o[15]=r("",2))]),o[46]||(o[46]=e("h3",{id:"_1-3-实时通信技术",tabindex:"-1"},[l("1.3. 实时通信技术 "),e("a",{class:"header-anchor",href:"#_1-3-实时通信技术","aria-label":"Permalink to “1.3. 实时通信技术”"},"​")],-1)),e("ul",null,[e("li",null,[o[17]||(o[17]=e("strong",null,"核心技术",-1)),o[18]||(o[18]=l(": ",-1)),t(n,{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket",target:"_blank",rel:"noreferrer"},{default:s(()=>[...o[16]||(o[16]=[l("WebSocket",-1)])]),_:1}),o[19]||(o[19]=l("。项目通过 ",-1)),o[20]||(o[20]=e("code",null,"websockets",-1)),o[21]||(o[21]=l(" 库来处理与聊天平台的实时、双向通信。",-1))]),o[22]||(o[22]=r("",3))]),o[47]||(o[47]=e("h3",{id:"_1-4-部署与运维",tabindex:"-1"},[l("1.4. 部署与运维 "),e("a",{class:"header-anchor",href:"#_1-4-部署与运维","aria-label":"Permalink to “1.4. 部署与运维”"},"​")],-1)),e("ul",null,[e("li",null,[o[24]||(o[24]=e("strong",null,"容器化",-1)),o[25]||(o[25]=l(": 项目提供了 ",-1)),o[26]||(o[26]=e("code",null,"Dockerfile",-1)),o[27]||(o[27]=l(" 和 ",-1)),o[28]||(o[28]=e("code",null,"docker-compose.yml",-1)),o[29]||(o[29]=l("，支持通过 ",-1)),t(n,{href:"https://www.docker.com/",target:"_blank",rel:"noreferrer"},{default:s(()=>[...o[23]||(o[23]=[l("Docker",-1)])]),_:1}),o[30]||(o[30]=l(" 进行完整的容器化部署。",-1))]),o[31]||(o[31]=r("",3))]),o[48]||(o[48]=e("h3",{id:"_1-5-前端框架",tabindex:"-1"},[l("1.5. 前端框架 "),e("a",{class:"header-anchor",href:"#_1-5-前端框架","aria-label":"Permalink to “1.5. 前端框架”"},"​")],-1)),e("ul",null,[o[42]||(o[42]=e("li",null,[e("strong",null,"无独立前端"),l(": MMC 项目本身是一个纯后端服务，没有用户交互的前端界面。")],-1)),e("li",null,[o[33]||(o[33]=e("strong",null,"文档站点",-1)),o[34]||(o[34]=l(": 项目的 ",-1)),o[35]||(o[35]=e("code",null,"docs/",-1)),o[36]||(o[36]=l(" 目录使用 ",-1)),t(n,{href:"https://vitepress.dev/",target:"_blank",rel:"noreferrer"},{default:s(()=>[...o[32]||(o[32]=[l("VitePress",-1)])]),_:1}),o[37]||(o[37]=l("（一个基于 ",-1)),o[38]||(o[38]=e("code",null,"Vue.js",-1)),o[39]||(o[39]=l(" 和 ",-1)),o[40]||(o[40]=e("code",null,"Vite",-1)),o[41]||(o[41]=l(" 的静态站点生成器）来构建其文档网站。",-1))])]),o[49]||(o[49]=r("",16)),t(a),t(i)])}const T=g(u,[["render",_]]);export{k as __pageData,T as default};
