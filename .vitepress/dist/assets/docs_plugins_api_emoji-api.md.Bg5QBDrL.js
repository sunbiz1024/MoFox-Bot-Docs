import{_ as s,c as a,o as t,af as l}from"./chunks/framework.Du4BpUy5.js";const g=JSON.parse('{"title":"表情包API","description":"","frontmatter":{},"headers":[],"relativePath":"docs/plugins/api/emoji-api.md","filePath":"docs/plugins/api/emoji-api.md"}'),n={name:"docs/plugins/api/emoji-api.md"};function h(e,i,r,k,p,o){return t(),a("div",null,[...i[0]||(i[0]=[l(`<h1 id="表情包api" tabindex="-1">表情包API <a class="header-anchor" href="#表情包api" aria-label="Permalink to “表情包API”">​</a></h1><p>表情包API模块提供表情包的获取、查询和管理功能，让插件能够智能地选择和使用表情包。</p><h2 id="导入方式" tabindex="-1">导入方式 <a class="header-anchor" href="#导入方式" aria-label="Permalink to “导入方式”">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> src.plugin_system.apis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> emoji_api</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> src.plugin_system </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> emoji_api</span></span></code></pre></div><h2 id="二步走识别优化" tabindex="-1">二步走识别优化 <a class="header-anchor" href="#二步走识别优化" aria-label="Permalink to “二步走识别优化”">​</a></h2><p>从新版本开始，表情包识别系统采用了<strong>二步走识别 + 智能缓存</strong>的优化方案：</p><h3 id="收到表情包时的识别流程" tabindex="-1"><strong>收到表情包时的识别流程</strong> <a class="header-anchor" href="#收到表情包时的识别流程" aria-label="Permalink to “收到表情包时的识别流程”">​</a></h3><ol><li><strong>第一步</strong>：VLM视觉分析 - 生成详细描述</li><li><strong>第二步</strong>：LLM情感分析 - 基于详细描述提取核心情感标签</li><li><strong>缓存机制</strong>：将情感标签缓存到数据库，详细描述保存到Images表</li></ol><h3 id="注册表情包时的优化" tabindex="-1"><strong>注册表情包时的优化</strong> <a class="header-anchor" href="#注册表情包时的优化" aria-label="Permalink to “注册表情包时的优化”">​</a></h3><ul><li><strong>智能复用</strong>：优先从Images表获取已有的详细描述</li><li><strong>避免重复</strong>：如果表情包之前被收到过，跳过VLM调用</li><li><strong>性能提升</strong>：减少不必要的AI调用，降低延时和成本</li></ul><h3 id="缓存策略" tabindex="-1"><strong>缓存策略</strong> <a class="header-anchor" href="#缓存策略" aria-label="Permalink to “缓存策略”">​</a></h3><ul><li><strong>ImageDescriptions表</strong>：缓存最终的情感标签（用于快速显示）</li><li><strong>Images表</strong>：保存详细描述（用于注册时复用）</li><li><strong>双重检查</strong>：防止并发情况下的重复生成</li></ul><h2 id="主要功能" tabindex="-1">主要功能 <a class="header-anchor" href="#主要功能" aria-label="Permalink to “主要功能”">​</a></h2><h3 id="_1-表情包获取" tabindex="-1">1. 表情包获取 <a class="header-anchor" href="#_1-表情包获取" aria-label="Permalink to “1. 表情包获取”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_by_description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(description: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; Optional[Tuple[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]:</span></span></code></pre></div><p>根据场景描述选择表情包</p><p><strong>Args：</strong></p><ul><li><code>description</code>：表情包的描述文本，例如&quot;开心&quot;、&quot;难过&quot;、&quot;愤怒&quot;等</li></ul><p><strong>Returns：</strong></p><ul><li><code>Optional[Tuple[str, str, str]]</code>：一个元组: (表情包的base64编码, 描述, 情感标签)，如果未找到匹配的表情包则返回None</li></ul><h4 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to “示例”">​</a></h4><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">emoji_result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> emoji_api.get_by_description(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;大笑&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> emoji_result:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    emoji_base64, description, matched_scene </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> emoji_result</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;获取到表情包: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">description</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, 场景: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">matched_scene</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 可以将emoji_base64用于发送表情包</span></span></code></pre></div><h3 id="_2-随机获取表情包" tabindex="-1">2. 随机获取表情包 <a class="header-anchor" href="#_2-随机获取表情包" aria-label="Permalink to “2. 随机获取表情包”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(count: Optional[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; List[Tuple[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]:</span></span></code></pre></div><p>随机获取指定数量的表情包</p><p><strong>Args：</strong></p><ul><li><code>count</code>：要获取的表情包数量，默认为1</li></ul><p><strong>Returns：</strong></p><ul><li><code>List[Tuple[str, str, str]]</code>：一个包含多个表情包的列表，每个元素是一个元组: (表情包的base64编码, 描述, 情感标签)，如果未找到或出错则返回空列表</li></ul><h3 id="_3-根据情感获取表情包" tabindex="-1">3. 根据情感获取表情包 <a class="header-anchor" href="#_3-根据情感获取表情包" aria-label="Permalink to “3. 根据情感获取表情包”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_by_emotion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(emotion: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; Optional[Tuple[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]:</span></span></code></pre></div><p>根据情感标签获取表情包</p><p><strong>Args：</strong></p><ul><li><code>emotion</code>：情感标签，例如&quot;开心&quot;、&quot;悲伤&quot;、&quot;愤怒&quot;等</li></ul><p><strong>Returns：</strong></p><ul><li><code>Optional[Tuple[str, str, str]]</code>：一个元组: (表情包的base64编码, 描述, 情感标签)，如果未找到则返回None</li></ul><h3 id="_4-获取表情包数量" tabindex="-1">4. 获取表情包数量 <a class="header-anchor" href="#_4-获取表情包数量" aria-label="Permalink to “4. 获取表情包数量”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><p>获取当前可用表情包的数量</p><h3 id="_5-获取表情包系统信息" tabindex="-1">5. 获取表情包系统信息 <a class="header-anchor" href="#_5-获取表情包系统信息" aria-label="Permalink to “5. 获取表情包系统信息”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() -&gt; Dict[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Any]:</span></span></code></pre></div><p>获取表情包系统的基本信息</p><p><strong>Returns：</strong></p><ul><li><code>Dict[str, Any]</code>：包含表情包数量、描述等信息的字典，包含以下键： <ul><li><code>current_count</code>：当前表情包数量</li><li><code>max_count</code>：最大表情包数量</li><li><code>available_emojis</code>：当前可用的表情包数量</li></ul></li></ul><h3 id="_6-获取所有可用的情感标签" tabindex="-1">6. 获取所有可用的情感标签 <a class="header-anchor" href="#_6-获取所有可用的情感标签" aria-label="Permalink to “6. 获取所有可用的情感标签”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_emotions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() -&gt; List[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]:</span></span></code></pre></div><p>获取所有可用的情感标签 <strong>（已经去重）</strong></p><h3 id="_7-获取所有表情包描述" tabindex="-1">7. 获取所有表情包描述 <a class="header-anchor" href="#_7-获取所有表情包描述" aria-label="Permalink to “7. 获取所有表情包描述”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_descriptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() -&gt; List[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]:</span></span></code></pre></div><p>获取所有表情包的描述列表</p><h2 id="场景描述说明" tabindex="-1">场景描述说明 <a class="header-anchor" href="#场景描述说明" aria-label="Permalink to “场景描述说明”">​</a></h2><h3 id="常用场景描述" tabindex="-1">常用场景描述 <a class="header-anchor" href="#常用场景描述" aria-label="Permalink to “常用场景描述”">​</a></h3><p>表情包系统支持多种具体的场景描述，举例如下：</p><ul><li><strong>开心类场景</strong>：开心的大笑、满意的微笑、兴奋的手舞足蹈</li><li><strong>无奈类场景</strong>：表示无奈和沮丧、轻微的讽刺、无语的摇头</li><li><strong>愤怒类场景</strong>：愤怒和不满、生气的瞪视、暴躁的抓狂</li><li><strong>惊讶类场景</strong>：震惊的表情、意外的发现、困惑的思考</li><li><strong>可爱类场景</strong>：卖萌的表情、撒娇的动作、害羞的样子</li></ul><h3 id="情感关键词示例" tabindex="-1">情感关键词示例 <a class="header-anchor" href="#情感关键词示例" aria-label="Permalink to “情感关键词示例”">​</a></h3><p>系统支持的情感关键词举例如下：</p><ul><li>大笑、微笑、兴奋、手舞足蹈</li><li>无奈、沮丧、讽刺、无语、摇头</li><li>愤怒、不满、生气、瞪视、抓狂</li><li>震惊、意外、困惑、思考</li><li>卖萌、撒娇、害羞、可爱</li></ul><h3 id="匹配机制" tabindex="-1">匹配机制 <a class="header-anchor" href="#匹配机制" aria-label="Permalink to “匹配机制”">​</a></h3><ul><li><strong>精确匹配</strong>：优先匹配完整的场景描述，如&quot;开心的大笑&quot;</li><li><strong>关键词匹配</strong>：如果没有精确匹配，则根据关键词进行模糊匹配</li><li><strong>语义匹配</strong>：系统会理解场景的语义含义进行智能匹配</li></ul><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to “注意事项”">​</a></h2><ol><li><strong>异步函数</strong>：部分函数是异步的，需要使用 <code>await</code></li><li><strong>返回格式</strong>：表情包以base64编码返回，可直接用于发送</li><li><strong>错误处理</strong>：所有函数都有错误处理，失败时返回None，空列表或默认值</li><li><strong>使用统计</strong>：系统会记录表情包的使用次数</li><li><strong>文件依赖</strong>：表情包依赖于本地文件，确保表情包文件存在</li><li><strong>编码格式</strong>：返回的是base64编码的图片数据，可直接用于网络传输</li><li><strong>场景理解</strong>：系统能理解具体的场景描述，比简单的情感分类更准确</li></ol>`,61)])])}const c=s(n,[["render",h]]);export{g as __pageData,c as default};
