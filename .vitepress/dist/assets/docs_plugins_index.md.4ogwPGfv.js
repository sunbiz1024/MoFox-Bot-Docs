import{_ as i,c as l,o as e,af as o}from"./chunks/framework.Du4BpUy5.js";const m=JSON.parse('{"title":"MoFox_Bot插件开发文档","description":"","frontmatter":{},"headers":[],"relativePath":"docs/plugins/index.md","filePath":"docs/plugins/index.md"}'),r={name:"docs/plugins/index.md"};function t(h,a,n,p,d,s){return e(),l("div",null,[...a[0]||(a[0]=[o('<h1 id="mofox-bot插件开发文档" tabindex="-1">MoFox_Bot插件开发文档 <a class="header-anchor" href="#mofox-bot插件开发文档" aria-label="Permalink to “MoFox_Bot插件开发文档”">​</a></h1><blockquote><p>欢迎来到MoFox_Bot插件系统开发文档！这里是你开始插件开发旅程的最佳起点。</p></blockquote><h2 id="新手入门" tabindex="-1">新手入门 <a class="header-anchor" href="#新手入门" aria-label="Permalink to “新手入门”">​</a></h2><ul><li><a href="./quick-start.html">📖 快速开始指南</a> - 快速创建你的第一个插件</li></ul><h2 id="组件功能详解" tabindex="-1">组件功能详解 <a class="header-anchor" href="#组件功能详解" aria-label="Permalink to “组件功能详解”">​</a></h2><ul><li><a href="./action-components.html">🧱 Action组件详解</a> - 掌握最核心的Action组件</li><li><a href="./PLUS_COMMAND_GUIDE.html">💻 Command组件详解</a> - 学习直接响应命令的组件</li><li><a href="./tool_guide.html">🔧 Tool组件详解</a> - 了解如何扩展信息获取能力</li><li><a href="./configuration-guide.html">⚙️ 配置文件系统指南</a> - 学会使用自动生成的插件配置文件</li><li><a href="./manifest-guide.html">📄 Manifest系统指南</a> - 了解插件元数据管理和配置架构</li></ul><p>Command vs Action 选择指南</p><ol><li>使用Command的场景</li></ol><ul><li>✅ 用户需要明确调用特定功能</li><li>✅ 需要精确的参数控制</li><li>✅ 管理和配置操作</li><li>✅ 查询和信息显示</li><li>✅ 系统维护命令</li></ul><ol start="2"><li>使用Action的场景</li></ol><ul><li>✅ 增强麦麦的智能行为</li><li>✅ 根据上下文自动触发</li><li>✅ 情绪和表情表达</li><li>✅ 智能建议和帮助</li><li>✅ 随机化的互动</li></ul><h2 id="api浏览" tabindex="-1">API浏览 <a class="header-anchor" href="#api浏览" aria-label="Permalink to “API浏览”">​</a></h2><h3 id="消息发送与处理api" tabindex="-1">消息发送与处理API <a class="header-anchor" href="#消息发送与处理api" aria-label="Permalink to “消息发送与处理API”">​</a></h3><ul><li><a href="./api/send-api.html">📤 发送API</a> - 各种类型消息发送接口</li><li><a href="./api/message-api.html">消息API</a> - 消息获取，消息构建，消息查询接口</li><li><a href="./api/chat-api.html">聊天流API</a> - 聊天流管理和查询接口</li></ul><h3 id="ai与生成api" tabindex="-1">AI与生成API <a class="header-anchor" href="#ai与生成api" aria-label="Permalink to “AI与生成API”">​</a></h3><ul><li><a href="./api/llm-api.html">LLM API</a> - 大语言模型交互接口，可以使用内置LLM生成内容</li><li><a href="./api/generator-api.html">✨ 回复生成器API</a> - 智能回复生成接口，可以使用内置风格化生成器</li></ul><h3 id="表情包api" tabindex="-1">表情包API <a class="header-anchor" href="#表情包api" aria-label="Permalink to “表情包API”">​</a></h3><ul><li><a href="./api/emoji-api.html">😊 表情包API</a> - 表情包选择和管理接口</li></ul><h3 id="关系系统api" tabindex="-1">关系系统API <a class="header-anchor" href="#关系系统api" aria-label="Permalink to “关系系统API”">​</a></h3><ul><li><a href="./api/person-api.html">人物信息API</a> - 用户信息，处理麦麦认识的人和关系的接口</li></ul><h3 id="数据与配置api" tabindex="-1">数据与配置API <a class="header-anchor" href="#数据与配置api" aria-label="Permalink to “数据与配置API”">​</a></h3><ul><li><a href="./api/database-api.html">🗄️ 数据库API</a> - 数据库操作接口</li><li><a href="./api/config-api.html">⚙️ 配置API</a> - 配置读取和用户信息接口</li></ul><h3 id="插件和组件管理api" tabindex="-1">插件和组件管理API <a class="header-anchor" href="#插件和组件管理api" aria-label="Permalink to “插件和组件管理API”">​</a></h3><ul><li><a href="./api/plugin-manage-api.html">🔌 插件API</a> - 插件加载和管理接口</li><li><a href="./api/component-manage-api.html">🧩 组件API</a> - 组件注册和管理接口</li></ul><h3 id="日志api" tabindex="-1">日志API <a class="header-anchor" href="#日志api" aria-label="Permalink to “日志API”">​</a></h3><ul><li><a href="./api/logging-api.html">📜 日志API</a> - logger实例获取接口</li></ul><h3 id="工具api" tabindex="-1">工具API <a class="header-anchor" href="#工具api" aria-label="Permalink to “工具API”">​</a></h3><ul><li><a href="./api/tool-api.html">🔧 工具API</a> - tool获取接口</li></ul><h2 id="支持" tabindex="-1">支持 <a class="header-anchor" href="#支持" aria-label="Permalink to “支持”">​</a></h2><blockquote><p>如果你在文档中发现错误或需要补充，请：</p></blockquote><ol><li>检查最新的文档版本</li><li>查看相关示例代码</li><li>参考其他类似插件</li><li>提交文档仓库issue</li></ol><h2 id="一个方便的小设计" tabindex="-1">一个方便的小设计 <a class="header-anchor" href="#一个方便的小设计" aria-label="Permalink to “一个方便的小设计”">​</a></h2><p>我们在<code>__init__.py</code>中定义了一个<code>__all__</code>变量，包含了所有需要导出的类和函数。 这样在其他地方导入时，可以直接使用 <code>from src.plugin_system import *</code> 来导入所有插件相关的类和函数。 或者你可以直接使用 <code>from src.plugin_system import BasePlugin, register_plugin, ComponentInfo</code> 之类的方式来导入你需要的部分。</p>',33)])])}const f=i(r,[["render",t]]);export{m as __pageData,f as default};
