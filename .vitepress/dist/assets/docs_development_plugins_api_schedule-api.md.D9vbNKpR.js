import{_ as l,I as i,c as n,o as h,a3 as p,J as a}from"./chunks/framework.Coydrlbh.js";const E=JSON.parse('{"title":"日程表API","description":"","frontmatter":{},"headers":[],"relativePath":"docs/development/plugins/api/schedule-api.md","filePath":"docs/development/plugins/api/schedule-api.md","lastUpdated":1758432642000}'),o={name:"docs/development/plugins/api/schedule-api.md"};function r(d,s,k,g,c,y){const t=i("NolebaseGitContributors"),e=i("NolebaseGitChangelog");return h(),n("div",null,[s[0]||(s[0]=p(`<h1 id="日程表api" tabindex="-1">日程表API <a class="header-anchor" href="#日程表api" aria-label="Permalink to “日程表API”">​</a></h1><p>日程表API模块专门负责日程和月度计划信息的查询与管理，帮助插件与MoFox-Bot的日程系统进行交互。</p><h2 id="导入方式" tabindex="-1">导入方式 <a class="header-anchor" href="#导入方式" aria-label="Permalink to “导入方式”">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> src.plugin_system </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> schedule_api</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> src.plugin_system.apis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> schedule_api</span></span></code></pre></div><h2 id="主要功能" tabindex="-1">主要功能 <a class="header-anchor" href="#主要功能" aria-label="Permalink to “主要功能”">​</a></h2><p>所有对外接口均为异步函数，请在插件的异步环境中使用 <code>await</code> 进行调用。</p><h3 id="_1-获取今日日程" tabindex="-1">1. 获取今日日程 <a class="header-anchor" href="#_1-获取今日日程" aria-label="Permalink to “1. 获取今日日程”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_today_schedule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() -&gt; Optional[List[Dict[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Any]]]:</span></span></code></pre></div><p><strong>Returns</strong>:</p><ul><li><code>Optional[List[Dict[str, Any]]]</code>：今天的日程列表。每个日程是一个字典，包含活动的详细信息。如果日程未生成或未启用，则返回 <code>None</code>。</li></ul><h3 id="_2-获取当前活动" tabindex="-1">2. 获取当前活动 <a class="header-anchor" href="#_2-获取当前活动" aria-label="Permalink to “2. 获取当前活动”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_current_activity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() -&gt; Optional[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]:</span></span></code></pre></div><p><strong>Returns</strong>:</p><ul><li><code>Optional[str]</code>：当前正在进行的活动名称。如果没有正在进行的活动，则返回 <code>None</code>。</li></ul><h3 id="_3-重新生成日程" tabindex="-1">3. 重新生成日程 <a class="header-anchor" href="#_3-重新生成日程" aria-label="Permalink to “3. 重新生成日程”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> regenerate_schedule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><p><strong>Details</strong>:</p><ul><li>触发后台任务，为今天重新生成一份日程安排。这在需要根据最新情况（例如，新的月度计划）更新日程时非常有用。</li></ul><p><strong>Returns</strong>:</p><ul><li><code>bool</code>：如果成功触发了重新生成任务，则返回 <code>True</code>，否则返回 <code>False</code>。</li></ul><h3 id="_4-获取月度计划" tabindex="-1">4. 获取月度计划 <a class="header-anchor" href="#_4-获取月度计划" aria-label="Permalink to “4. 获取月度计划”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_monthly_plans</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(target_month: Optional[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; List[MonthlyPlan]:</span></span></code></pre></div><p><strong>Args</strong>:</p><ul><li><code>target_month</code> (Optional[str])：目标月份，格式为 <code>&quot;YYYY-MM&quot;</code>。如果省略，则默认为当前月份。</li></ul><p><strong>Returns</strong>:</p><ul><li><code>List[MonthlyPlan]</code>：指定月份的有效月度计划列表。<code>MonthlyPlan</code> 是一个数据库模型对象，包含了计划的详细信息。</li></ul><h3 id="_5-确保月度计划存在" tabindex="-1">5. 确保月度计划存在 <a class="header-anchor" href="#_5-确保月度计划存在" aria-label="Permalink to “5. 确保月度计划存在”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ensure_monthly_plans</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(target_month: Optional[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><p><strong>Details</strong>:</p><ul><li>检查指定月份是否存在月度计划。如果不存在，会自动触发生成过程。</li></ul><p><strong>Args</strong>:</p><ul><li><code>target_month</code> (Optional[str])：目标月份，格式为 <code>&quot;YYYY-MM&quot;</code>。如果省略，则默认为当前月份。</li></ul><p><strong>Returns</strong>:</p><ul><li><code>bool</code>：如果计划已存在或成功生成，则返回 <code>True</code>，否则返回 <code>False</code>。</li></ul><h3 id="_6-归档月度计划" tabindex="-1">6. 归档月度计划 <a class="header-anchor" href="#_6-归档月度计划" aria-label="Permalink to “6. 归档月度计划”">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> archive_monthly_plans</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(target_month: Optional[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><p><strong>Details</strong>:</p><ul><li>将指定月份的所有有效月度计划标记为“已归档”，使它们不再参与未来日程的生成。</li></ul><p><strong>Args</strong>:</p><ul><li><code>target_month</code> (Optional[str])：目标月份，格式为 <code>&quot;YYYY-MM&quot;</code>。如果省略，则默认为当前月份。</li></ul><p><strong>Returns</strong>:</p><ul><li><code>bool</code>：如果归档操作成功，则返回 <code>True</code>，否则返回 <code>False</code>。</li></ul><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to “注意事项”">​</a></h2><ol><li><strong>异步调用</strong>: 本API中的所有函数都是 <code>async</code> 函数，必须在异步上下文中使用 <code>await</code> 关键字进行调用。</li><li><strong>异常处理</strong>: 尽管API内部已经进行了一定的错误处理，但在调用时，最好还是将它们包裹在 <code>try...except</code> 块中，以应对可能发生的意外情况。</li><li><strong>数据模型</strong>: <code>get_monthly_plans</code> 返回的是 <code>MonthlyPlan</code> 对象列表，你可以直接访问其属性来获取计划的详细信息，例如 <code>.plan_text</code>。</li></ol>`,44)),a(t),a(e)])}const b=l(o,[["render",r]]);export{E as __pageData,b as default};
